Task 5:Parameterized testing for Triangle using Junit
AIM: To perform parameterized testing for Triangle using Junit
Procedure:
1. Creating Java project.
● Click on File and select New project
● Enter project name as com.vogella.JUnit.Basic
● Click on Next and then on Finish
2. Creating java class
● Right click on com.vogella.JUnit.Basic and click on New .
● Click on class and give the class name as Triangle
● Click on Finish
● Type the following code

packagecom.vogella.JUnit.Basic;
public class Triangle {
publicint fun(int a, int b, int c)
{
if(a==b && b==c)
return 1;
else if(a==b || b==c || a==c)
return 2;
else
return 3;
}
}

3. Creating java Test Project
● Right click on com.vogella.JUnit.Basic.
● Click on properties and select tab java build path
● Click on source and click on Create New Folder.
● Give the folder name as Test and click on next.
● Click on Finish and then on OK
4. Create java test class
● Right click on com.vogella.JUnit.Basic and click on new
● Click on Junit test case.
● Change the name of folder src to test in source folder tab.
● Click on browse and select Addition class and click on Next.
● Click on Finish and then on OK.
● Add the following code

Program:
package com.vogella.JUnit.Basic;
import static org.junit.Assert.*;
importjava.util.Arrays;
importjava.util.Collection;
importorg.junit.Test;
importorg.junit.runner.RunWith;
importorg.junit.runners.Parameterized;
importorg.junit.runners.Parameterized.Parameters;
@RunWith(Parameterized.class)
public class TriangleTest {
privateint expected;
privateint first;
privateint second;
privateint third;
publicTriangleTest(intfirstNumber, intsecondNumber, intthirdNumber, intexpectedResult)
{
this.expected = expectedResult;
this.first = firstNumber;
this.second = secondNumber;
this.third = thirdNumber;
}
@Parameters
public static Collection<Integer[]>addNumbers()
{
returnArrays.asList(new Integer[][]{
{4,4,4,1},{1,2,2,1},{7,2,6,3},{1,1,2,2},{7,8,1,3}}
@Test
public void testSubNumbers() {
//fail("Not yet implemented");
Triangle s= new Triangle();
System.out.println("Prime check with parameter : "+first);
assertEquals(s.fun(first,second,third),expected);
}
}
